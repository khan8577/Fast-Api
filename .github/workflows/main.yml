# name: CI/CD fastapi-app

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   test:
#     name: Run Tests
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: "3.11"

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r app/requirements.txt
#           pip install pytest

#       - name: Create .env file from secrets
#         run: |
#           echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
#           echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
#           echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env

#       - name: Run tests
#         env:
#           PYTHONPATH: ${{ github.workspace }}
#           DATABASE_URL: ${{ secrets.DATABASE_URL }}
#           DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
#           DB_PORT: ${{ secrets.DB_PORT }}
#         run: pytest tests/test_main.py

#   build:
#     name: Build & Push Docker Image
#     runs-on: ubuntu-latest
#     needs: test

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Create .env file from secrets
#         run: |
#           echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
#           echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
#           echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build Docker image
#         run: docker build -t ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest ./app

#       - name: Push Docker image
#         run: docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest

#   deploy:
#     name: Deploy to EC2
#     runs-on: ubuntu-latest
#     needs: build

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       # ðŸ”¹ Ensure all files, including .git, are readable before SCP
#       - name: Fix permissions on repo files
#         run: chmod -R u+rw .

#       - name: Copy repository to EC2 (~/task)
#         uses: appleboy/scp-action@v0.1.7
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USER }}
#           key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
#           source: "."
#           target: "~/task"
#           overwrite: true
#           strip_components: 0

#       - name: SSH to EC2 and Deploy
#         uses: appleboy/ssh-action@v1.0.3
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USER }}
#           key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
#           script: |
#             set -e
#             mkdir -p ~/task
#             cd ~/task
#             # Write .env with all required variables
#             cat > .env << 'EOF'
#             DATABASE_URL=${{ secrets.DATABASE_URL }}
#             DB_PASSWORD=${{ secrets.DB_PASSWORD }}
#             DB_PORT=${{ secrets.DB_PORT }}
#             EOF

#             # Install Docker if missing
#             if ! command -v docker >/dev/null 2>&1; then
#               curl -fsSL https://get.docker.com | sh
#               sudo systemctl enable --now docker
#             fi

#             # Build and restart Docker container
#             sudo docker build -t fastapi-app:latest ./app
#             sudo docker stop fastapi-app || true
#             sudo docker rm fastapi-app || true
#             sudo docker run -d \
#               --name fastapi-app \
#               --restart unless-stopped \
#               -p 8000:8000 \
#               --env-file .env \
#               fastapi-app:latest